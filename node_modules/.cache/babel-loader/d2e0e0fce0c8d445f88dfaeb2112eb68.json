{"ast":null,"code":"var _jsxFileName = \"/home/alvarod/Escritorio/Work/pokedex/pokedex/src/components/PaginationButton.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { rem } from \"polished\";\nimport { spacing } from \"../styles/settings/spacing\";\nimport { grayscale } from \"../styles/settings/colors\";\nimport { size, height } from \"../styles/settings/font\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaginationButton = ({\n  content,\n  setPage,\n  direction\n}) => {\n  const handleNextPage = () => {\n    if (direction === 1) {\n      setPage(prevPage => prevPage + 1);\n    } else {\n      setPage(prevPage => prevPage - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleNextPage,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = PaginationButton;\nconst Button = styled.button`\n    padding: ${rem(spacing.mini)} ${rem(spacing.medium)};\n    border: 1px solid white;\n    border-radius: ${rem(spacing.small)};\n    box-shadow: 5px 5px 10px ${grayscale.lightGray};\n    background: ${grayscale.darkGray};\n    color: white;\n    font-family: 'Poppins', sans-serif;\n    font-size: ${rem(size.larger)};\n    font-weight: bold;\n    line-height: ${rem(height.large)};\n    cursor: pointer;\n    margin: ${rem(spacing.xtiny)};\n    :hover {\n        color:${grayscale.darkGray};\n        background-color: white;\n        border: 1px solid black;\n        transition: all 0.3s ease-in-out;\n    }\n    transition: all 0.3s ease-in-out;\n`;\n_c2 = Button;\nexport default PaginationButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaginationButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/home/alvarod/Escritorio/Work/pokedex/pokedex/src/components/PaginationButton.js"],"names":["React","styled","rem","spacing","grayscale","size","height","PaginationButton","content","setPage","direction","handleNextPage","prevPage","Button","button","mini","medium","small","lightGray","darkGray","larger","large","xtiny"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,yBAA7B;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAC1D,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAGD,SAAS,KAAK,CAAjB,EAAmB;AACfD,MAAAA,OAAO,CAACG,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAP;AACH,KAFD,MAEO;AACHH,MAAAA,OAAO,CAACG,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAP;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,cAAjB;AAAA,gBAAkCH;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAdD;;KAAMD,gB;AAgBN,MAAMM,MAAM,GAAGZ,MAAM,CAACa,MAAO;AAC7B,eAAeZ,GAAG,CAACC,OAAO,CAACY,IAAT,CAAe,IAAGb,GAAG,CAACC,OAAO,CAACa,MAAT,CAAiB;AACxD;AACA,qBAAqBd,GAAG,CAACC,OAAO,CAACc,KAAT,CAAgB;AACxC,+BAA+Bb,SAAS,CAACc,SAAU;AACnD,kBAAkBd,SAAS,CAACe,QAAS;AACrC;AACA;AACA,iBAAiBjB,GAAG,CAACG,IAAI,CAACe,MAAN,CAAc;AAClC;AACA,mBAAmBlB,GAAG,CAACI,MAAM,CAACe,KAAR,CAAe;AACrC;AACA,cAAcnB,GAAG,CAACC,OAAO,CAACmB,KAAT,CAAgB;AACjC;AACA,gBAAgBlB,SAAS,CAACe,QAAS;AACnC;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMN,M;AAsBN,eAAeN,gBAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { rem } from \"polished\";\nimport { spacing } from \"../styles/settings/spacing\";\nimport { grayscale } from \"../styles/settings/colors\";\nimport { size, height } from \"../styles/settings/font\";\n\nconst PaginationButton = ({ content, setPage, direction }) => {\n    const handleNextPage = () => {\n        if(direction === 1){\n            setPage(prevPage => prevPage + 1);\n        } else {\n            setPage(prevPage => prevPage - 1);\n        }\n    }\n\n    return(\n        <>\n            <Button onClick={handleNextPage}>{content}</Button>\n        </>\n    );\n}\n\nconst Button = styled.button`\n    padding: ${rem(spacing.mini)} ${rem(spacing.medium)};\n    border: 1px solid white;\n    border-radius: ${rem(spacing.small)};\n    box-shadow: 5px 5px 10px ${grayscale.lightGray};\n    background: ${grayscale.darkGray};\n    color: white;\n    font-family: 'Poppins', sans-serif;\n    font-size: ${rem(size.larger)};\n    font-weight: bold;\n    line-height: ${rem(height.large)};\n    cursor: pointer;\n    margin: ${rem(spacing.xtiny)};\n    :hover {\n        color:${grayscale.darkGray};\n        background-color: white;\n        border: 1px solid black;\n        transition: all 0.3s ease-in-out;\n    }\n    transition: all 0.3s ease-in-out;\n`;\n\nexport default PaginationButton;"]},"metadata":{},"sourceType":"module"}